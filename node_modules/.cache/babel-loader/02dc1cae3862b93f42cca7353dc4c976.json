{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekpatel/Documents/web/newest/sidebar/src/context.js\";\nimport React, { useState, useContext } from 'react';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isSidebarOpen,\n      isModalOpen,\n      openModal,\n      closeModal,\n      openSidebar,\n      closeSidebar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/abhishekpatel/Documents/web/newest/sidebar/src/context.js"],"names":["React","useState","useContext","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isModalOpen","setIsModalOpen","openSidebar","closeSidebar","openModal","closeModal","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,MAAMC,UAAU,GAAGH,KAAK,CAACI,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAM;AACzBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAMK,SAAS,GAAG,MAAM;AACtBH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAM;AACvBJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,aADK;AAELE,MAAAA,WAFK;AAGLI,MAAAA,SAHK;AAILC,MAAAA,UAJK;AAKLH,MAAAA,WALK;AAMLC,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGN,QAVH,CADF;AAcD,CAhCD;;AAkCA,OAAO,MAAMS,gBAAgB,GAAG,MAAM;AACpC,SAAOb,UAAU,CAACC,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext } from 'react';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        isSidebarOpen,\n        isModalOpen,\n        openModal,\n        closeModal,\n        openSidebar,\n        closeSidebar,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}